"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2083],{28453:(t,e,o)=>{o.d(e,{R:()=>a,x:()=>i});var n=o(96540);const r={},c=n.createContext(r);function a(t){const e=n.useContext(c);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:a(t.components),n.createElement(c.Provider,{value:e},t.children)}},88896:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>n,toc:()=>s});const n=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact","title":"increment-exact","description":"//ERDDAP/com.cohort.util/ScriptMath/incrementExact","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"hypot","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/hypot"},"next":{"title":"log","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log"}}');var r=o(74848),c=o(28453);const a={},i="incrementExact",d={},s=[];function h(t){const e={a:"a",br:"br",h1:"h1",header:"header",p:"p",...(0,c.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["//",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/",children:"ERDDAP"}),"/",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/",children:"ScriptMath"}),"/",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact",children:"incrementExact"})]}),"\n",(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"incrementexact",children:"incrementExact"})}),"\n",(0,r.jsxs)(e.p,{children:["[JVM]",(0,r.jsx)(e.br,{}),"\n","open fun ",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact",children:"incrementExact"}),"(a: Int): Int"]}),"\n",(0,r.jsx)(e.p,{children:"Returns the argument incremented by one, throwing an exception if the result overflows an int."}),"\n",(0,r.jsxs)(e.p,{children:["[JVM]",(0,r.jsx)(e.br,{}),"\n","open fun ",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact",children:"incrementExact"}),"(a: Long): Long"]}),"\n",(0,r.jsx)(e.p,{children:"Returns the argument incremented by one, throwing an exception if the result overflows a long."})]})}function m(t={}){const{wrapper:e}={...(0,c.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(h,{...t})}):h(t)}}}]);