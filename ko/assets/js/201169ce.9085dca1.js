"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1968],{28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>s});var n=r(96540);const i={},a=n.createContext(i);function d(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(a.Provider,{value:t},e.children)}},78649:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>l,frontMatter:()=>d,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e","title":"binary-find-first-g-e","description":"//ERDDAP/com.cohort.util/ScriptMath2/binaryFindFirstGE","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"binary-find-first-g-a-e","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-a-e"},"next":{"title":"binary-find-last-l-a-e","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-last-l-a-e"}}');var i=r(74848),a=r(28453);const d={},s="binaryFindFirstGE",o={},c=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4}];function h(e){const t={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["//",(0,i.jsx)(t.a,{href:"/ko/docs/dokka/",children:"ERDDAP"}),"/",(0,i.jsx)(t.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,i.jsx)(t.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/",children:"ScriptMath2"}),"/",(0,i.jsx)(t.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e",children:"binaryFindFirstGE"})]}),"\n",(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"binaryfindfirstge",children:"binaryFindFirstGE"})}),"\n",(0,i.jsxs)(t.p,{children:["[JVM]",(0,i.jsx)(t.br,{}),"\n","open fun ",(0,i.jsx)(t.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e",children:"binaryFindFirstGE"}),"(dar: Array<Double>, x: Double): Int"]}),"\n",(0,i.jsx)(t.p,{children:"Find the first element which is >= x in an ascending sorted array."}),"\n",(0,i.jsx)(t.p,{children:"If firstGE >lastLE, there are no matching elements (because the requested range is less than or greater than all the values, or between two adjacent values)."}),"\n",(0,i.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,i.jsx)(t.p,{children:"the index of the first element which is >= x in an ascending sorted array. If x <the smallest element, this returns 0. If x >the largest element, this returns dar.length (no element is appropriate). If x is NaN, this is currently undefined."}),"\n",(0,i.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsx)(t.p,{children:"JVM"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{}),(0,i.jsx)(t.th,{})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"dar"}),(0,i.jsx)(t.td,{children:"an ascending sorted double[] which currently may not have duplicate values"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"x"}),(0,i.jsx)(t.td,{})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);