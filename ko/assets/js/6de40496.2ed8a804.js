"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2415],{28453:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>d});var i=t(96540);const r={},o=i.createContext(r);function a(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),i.createElement(o.Provider,{value:e},n.children)}},90429:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite","title":"equals-including-nan-or-infinite","description":"//ERDDAP/com.cohort.util/ScriptMath2/equalsIncludingNanOrInfinite","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"double-to-float-na-n","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/double-to-float-na-n"},"next":{"title":"exponent","permalink":"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/exponent"}}');var r=t(74848),o=t(28453);const a={},d="equalsIncludingNanOrInfinite",c={},s=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4}];function l(n){const e={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["//",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/",children:"ERDDAP"}),"/",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/",children:"ScriptMath2"}),"/",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite",children:"equalsIncludingNanOrInfinite"})]}),"\n",(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"equalsincludingnanorinfinite",children:"equalsIncludingNanOrInfinite"})}),"\n",(0,r.jsxs)(e.p,{children:["[JVM]",(0,r.jsx)(e.br,{}),"\n","open fun ",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite",children:"equalsIncludingNanOrInfinite"}),"(a: Double, b: Double): Boolean"]}),"\n",(0,r.jsxs)(e.p,{children:["open fun ",(0,r.jsx)(e.a,{href:"/ko/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite",children:"equalsIncludingNanOrInfinite"}),"(a: Float, b: Float): Boolean"]}),"\n",(0,r.jsx)(e.p,{children:"This returns true if a == b. This treats as true: NaN=NaN (which Java says is false), NEGATIVE_INFINITY=NEGATIVE_INFINITY, and POSITIVE_INFINITY=POSITIVE_INFINITY."}),"\n",(0,r.jsx)(e.h4,{id:"return",children:"Return"}),"\n",(0,r.jsx)(e.p,{children:"true if a == b."}),"\n",(0,r.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(e.p,{children:"JVM"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsx)(e.tr,{children:(0,r.jsx)(e.th,{})})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsx)(e.tr,{children:(0,r.jsx)(e.td,{children:"a"})}),(0,r.jsx)(e.tr,{children:(0,r.jsx)(e.td,{children:"b"})})]})]})]})}function u(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(l,{...n})}):l(n)}}}]);