"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[593],{28453:(t,e,r)=>{r.d(e,{R:()=>o,x:()=>d});var n=r(96540);const s={},i=n.createContext(s);function o(t){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:o(t.components),n.createElement(i.Provider,{value:e},t.children)}},50357:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left","title":"left","description":"//ERDDAP/com.cohort.util/ScriptString2/left","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left","permalink":"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"just-printable","permalink":"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/just-printable"},"next":{"title":"line-containing-ignore-case","permalink":"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/line-containing-ignore-case"}}');var s=r(74848),i=r(28453);const o={},d="left",c={},a=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4}];function l(t){const e={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.p,{children:["//",(0,s.jsx)(e.a,{href:"/tr/docs/dokka/",children:"ERDDAP"}),"/",(0,s.jsx)(e.a,{href:"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,s.jsx)(e.a,{href:"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/",children:"ScriptString2"}),"/",(0,s.jsx)(e.a,{href:"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left",children:"left"})]}),"\n",(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"left",children:"left"})}),"\n",(0,s.jsxs)(e.p,{children:["[JVM]",(0,s.jsx)(e.br,{}),"\n","open fun ",(0,s.jsx)(e.a,{href:"/tr/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/left",children:"left"}),"(s: ",(0,s.jsx)(e.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"}),", length: Int): ",(0,s.jsx)(e.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"})]}),"\n",(0,s.jsx)(e.p,{children:"Returns a String 'length' long, with 's' left-justified (using spaces as the added characters) within the resulting String. If s is already longer, then there will be no change."}),"\n",(0,s.jsx)(e.h4,{id:"return",children:"Return"}),"\n",(0,s.jsx)(e.p,{children:"'s' left-justified to make the result 'length' long."}),"\n",(0,s.jsx)(e.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(e.p,{children:"JVM"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{}),(0,s.jsx)(e.th,{})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"s"}),(0,s.jsx)(e.td,{children:"is the string to be left-justified."})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:"length"}),(0,s.jsx)(e.td,{children:"is desired length of the resulting string."})]})]})]})]})}function h(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}}}]);