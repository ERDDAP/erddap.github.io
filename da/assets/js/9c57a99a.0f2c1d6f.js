"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[219],{28453:(t,r,e)=>{e.d(r,{R:()=>n,x:()=>a});var d=e(96540);const o={},c=d.createContext(o);function n(t){const r=d.useContext(c);return d.useMemo((function(){return"function"==typeof t?t(r):{...r,...t}}),[r,t])}function a(t){let r;return r=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:n(t.components),d.createElement(c.Provider,{value:r},t.children)}},39577:(t,r,e)=>{e.r(r),e.d(r,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>d,toc:()=>i});const d=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc","title":"trunc","description":"//ERDDAP/com.cohort.util/ScriptMath2/trunc","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc","permalink":"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"trunc-to-int","permalink":"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc-to-int"},"next":{"title":"ulong-to-double","permalink":"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ulong-to-double"}}');var o=e(74848),c=e(28453);const n={},a="trunc",s={},i=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4}];function h(t){const r={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(r.p,{children:["//",(0,o.jsx)(r.a,{href:"/da/docs/dokka/",children:"ERDDAP"}),"/",(0,o.jsx)(r.a,{href:"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,o.jsx)(r.a,{href:"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/",children:"ScriptMath2"}),"/",(0,o.jsx)(r.a,{href:"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc",children:"trunc"})]}),"\n",(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"trunc",children:"trunc"})}),"\n",(0,o.jsxs)(r.p,{children:["[JVM]",(0,o.jsx)(r.br,{}),"\n","open fun ",(0,o.jsx)(r.a,{href:"/da/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc",children:"trunc"}),"(d: Double): Double"]}),"\n",(0,o.jsx)(r.p,{children:"This returns the truncated part of a double."}),"\n",(0,o.jsx)(r.h4,{id:"return",children:"Return"}),"\n",(0,o.jsx)(r.p,{children:"d truncated. The return value will be the same sign as d. !isFinite(d), this returns NaN. d=trunc(d)+frac(d);"}),"\n",(0,o.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsx)(r.p,{children:"JVM"}),"\n",(0,o.jsxs)(r.table,{children:[(0,o.jsx)(r.thead,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.th,{}),(0,o.jsx)(r.th,{})]})}),(0,o.jsx)(r.tbody,{children:(0,o.jsxs)(r.tr,{children:[(0,o.jsx)(r.td,{children:"d"}),(0,o.jsx)(r.td,{children:"a double value"})]})})]})]})}function u(t={}){const{wrapper:r}={...(0,c.R)(),...t.components};return r?(0,o.jsx)(r,{...t,children:(0,o.jsx)(h,{...t})}):h(t)}}}]);