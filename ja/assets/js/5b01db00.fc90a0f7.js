"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[517],{28453:(t,e,a)=>{a.d(e,{R:()=>d,x:()=>n});var o=a(96540);const r={},c=o.createContext(r);function d(t){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function n(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:d(t.components),o.createElement(c.Provider,{value:e},t.children)}},76928:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>n,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact","title":"add-exact","description":"//ERDDAP/com.cohort.util/ScriptMath/addExact","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact","permalink":"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"acos","permalink":"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/acos"},"next":{"title":"asin","permalink":"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/asin"}}');var r=a(74848),c=a(28453);const d={},n="addExact",s={},i=[];function h(t){const e={a:"a",br:"br",h1:"h1",header:"header",p:"p",...(0,c.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:["//",(0,r.jsx)(e.a,{href:"/ja/docs/dokka/",children:"ERDDAP"}),"/",(0,r.jsx)(e.a,{href:"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,r.jsx)(e.a,{href:"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/",children:"ScriptMath"}),"/",(0,r.jsx)(e.a,{href:"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact",children:"addExact"})]}),"\n",(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"addexact",children:"addExact"})}),"\n",(0,r.jsxs)(e.p,{children:["[JVM]",(0,r.jsx)(e.br,{}),"\n","open fun ",(0,r.jsx)(e.a,{href:"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact",children:"addExact"}),"(x: Int, y: Int): Int"]}),"\n",(0,r.jsx)(e.p,{children:"Returns the sum of its arguments, throwing an exception if the result overflows an int."}),"\n",(0,r.jsxs)(e.p,{children:["[JVM]",(0,r.jsx)(e.br,{}),"\n","open fun ",(0,r.jsx)(e.a,{href:"/ja/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact",children:"addExact"}),"(x: Long, y: Long): Long"]}),"\n",(0,r.jsx)(e.p,{children:"Returns the sum of its arguments, throwing an exception if the result overflows a long."})]})}function p(t={}){const{wrapper:e}={...(0,c.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(h,{...t})}):h(t)}}}]);