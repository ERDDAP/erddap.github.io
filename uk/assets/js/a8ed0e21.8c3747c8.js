"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7221],{69782:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double","title":"parse-double","description":"//ERDDAP/com.cohort.util/ScriptString2/parseDouble","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double","permalink":"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/documentation/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"parse-boolean","permalink":"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-boolean"},"next":{"title":"parse-float","permalink":"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-float"}}');var a=r(74848),s=r(28453);const n={},i="parseDouble",d={},c=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4}];function l(e){const t={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["//",(0,a.jsx)(t.a,{href:"/uk/docs/dokka/",children:"ERDDAP"}),"/",(0,a.jsx)(t.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,a.jsx)(t.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/",children:"ScriptString2"}),"/",(0,a.jsx)(t.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double",children:"parseDouble"})]}),"\n",(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"parsedouble",children:"parseDouble"})}),"\n",(0,a.jsxs)(t.p,{children:["[JVM]",(0,a.jsx)(t.br,{}),"\n","open fun ",(0,a.jsx)(t.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/parse-double",children:"parseDouble"}),"(s: ",(0,a.jsx)(t.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"}),"): Double"]}),"\n",(0,a.jsx)(t.p,{children:"Convert a string to a double. Leading or trailing spaces are automatically removed. This accepts hexadecimal integers starting with \"0x\". Whole number starting with '0' (e.g., 012) is treated as decimal (not octal as Java would). This won't throw an exception if the number isn't formatted right."}),"\n",(0,a.jsx)(t.h4,{id:"return",children:"Return"}),"\n",(0,a.jsx)(t.p,{children:"the double value from the String (a finite value, Double.POSITIVE_INFINITY, Double.NEGATIVE_INFINITY, or Double.NaN if error)."}),"\n",(0,a.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(t.p,{children:"JVM"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{}),(0,a.jsx)(t.th,{})]})}),(0,a.jsx)(t.tbody,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:"s"}),(0,a.jsx)(t.td,{children:"is the String representation of a number."})]})})]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>i});var o=r(96540);const a={},s=o.createContext(a);function n(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:n(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);