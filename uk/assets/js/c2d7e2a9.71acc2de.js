"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2696],{28453:(r,e,o)=>{o.d(e,{R:()=>c,x:()=>a});var s=o(96540);const t={},d=s.createContext(t);function c(r){const e=s.useContext(d);return s.useMemo((function(){return"function"==typeof r?r(e):{...e,...r}}),[e,r])}function a(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(t):r.components||t:c(r.components),s.createElement(d.Provider,{value:e},r.children)}},58508:(r,e,o)=>{o.r(e),o.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>s,toc:()=>n});const s=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/index","title":"index","description":"//ERDDAP/com.cohort.util/ScriptMath2","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/index.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/","permalink":"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"ulp","permalink":"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/ulp"},"next":{"title":"-binary-limit","permalink":"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-binary-limit"}}');var t=o(74848),d=o(28453);const c={},a="ScriptMath2",i={},n=[{value:"Author",id:"author",level:4},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Functions",id:"functions",level:2}];function h(r){const e={a:"a",br:"br",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...r.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.p,{children:["//",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/",children:"ERDDAP"}),"/",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/",children:"ScriptMath2"})]}),"\n",(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"scriptmath2",children:"ScriptMath2"})}),"\n",(0,t.jsxs)(e.p,{children:["[JVM]",(0,t.jsx)(e.br,{}),"\n","open class ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/",children:"ScriptMath2"})]}),"\n",(0,t.jsxs)(e.p,{children:['This class makes almost all of the static methods in com.cohort.Math2 accessible to JexlScript scripts as "Math2.',(0,t.jsx)(e.em,{children:"name"}),"()\" methods. This doesn't include the memory related and sleep related methods."]}),"\n",(0,t.jsxs)(e.p,{children:["The underlying Math2 class is Copyright (c) 2005 Robert Simons (",(0,t.jsx)(e.a,{href:"mailto:CoHortSoftware@gmail.com",children:"CoHortSoftware@gmail.com"}),"). See the MIT/X-like license in com/cohort/util/LICENSE.txt."]}),"\n",(0,t.jsx)(e.h4,{id:"author",children:"Author"}),"\n",(0,t.jsxs)(e.p,{children:["Bob Simons (was ",(0,t.jsx)(e.a,{href:"mailto:bob.simons@noaa.gov",children:"bob.simons@noaa.gov"}),", now ",(0,t.jsx)(e.a,{href:"mailto:BobSimons2.00@gmail.com",children:"BobSimons2.00@gmail.com"}),") 2019-11-14"]}),"\n",(0,t.jsx)(e.h2,{id:"constructors",children:"Constructors"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{}),(0,t.jsx)(e.th,{})]})}),(0,t.jsx)(e.tbody,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-script-math2-constructor",children:"ScriptMath2"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"constructor()"]})]})})]}),"\n",(0,t.jsx)(e.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Name"}),(0,t.jsx)(e.th,{children:"Summary"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-binary0",children:"Binary0"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-binary0",children:"Binary0"}),": Int = -2000",(0,t.jsx)("br",{}),"-2000"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-binary-limit",children:"BinaryLimit"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-binary-limit",children:"BinaryLimit"}),": Int = 980",(0,t.jsx)("br",{}),"980; //2^980 = ~1e295"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-g-b",children:"BytesPerGB"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-g-b",children:"BytesPerGB"}),": Long = 1073741824",(0,t.jsx)("br",{}),"BytesPerMB * (long)BytesPerKB"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-k-b",children:"BytesPerKB"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-k-b",children:"BytesPerKB"}),": Int = 1024",(0,t.jsx)("br",{}),"1024"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-m-b",children:"BytesPerMB"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-m-b",children:"BytesPerMB"}),": Int = 1048576",(0,t.jsx)("br",{}),"BytesPerKB * BytesPerKB"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-p-b",children:"BytesPerPB"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-p-b",children:"BytesPerPB"}),": Long = 1125899906842624",(0,t.jsx)("br",{}),"BytesPerTB * BytesPerKB;"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-t-b",children:"BytesPerTB"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-bytes-per-t-b",children:"BytesPerTB"}),": Long = 1099511627776",(0,t.jsx)("br",{}),"BytesPerGB * BytesPerKB"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-c-o-m-m-o-n_-m-v9",children:"COMMON_MV9"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-c-o-m-m-o-n_-m-v9",children:"COMMON_MV9"}),": Array<Double>",(0,t.jsx)("br",{}),"-99, -99.9, -99.99, -999, -999.9, -9999, -99999, -999999, -9999999, 99, 99.9, 99.99, 999, 999."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/d-eps",children:"dEps"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/d-eps",children:"dEps"}),": Double = 1.0E-13",(0,t.jsx)("br",{}),"epsilon suitable for doubles = 1e-13."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/f-eps",children:"fEps"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/f-eps",children:"fEps"}),": Float = 1.0E-5f",(0,t.jsx)("br",{}),"Eps values define small values that are suitable for quick tests if the difference between two values is close to the precision of of the data type."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-inverse-ten",children:"InverseTen"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-inverse-ten",children:"InverseTen"}),": Array<Double>",(0,t.jsx)("br",{}),"This defines inverse powers of ten."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/kelvin-to-c",children:"kelvinToC"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/kelvin-to-c",children:"kelvinToC"}),": Double = -273.15",(0,t.jsx)("br",{}),"-273."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/km-per-mile",children:"kmPerMile"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/km-per-mile",children:"kmPerMile"}),": Double = 1.6134453781512605",(0,t.jsx)("br",{}),"mPerMile * 0."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ln10",children:"ln10"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ln10",children:"ln10"}),": Double",(0,t.jsx)("br",{}),"Math.log(10.0); //2."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ln2",children:"ln2"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ln2",children:"ln2"}),": Double",(0,t.jsx)("br",{}),"Math.log(2."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/lo-and",children:"loAnd"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/lo-and",children:"loAnd"}),": Long = 4294967295",(0,t.jsx)("br",{}),"((long) Integer."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/meter-per-foot",children:"meterPerFoot"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/meter-per-foot",children:"meterPerFoot"}),": Double = 0.30557677616501144",(0,t.jsx)("br",{}),"1200.0 / 3927.0."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/m-per-mile",children:"mPerMile"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/m-per-mile",children:"mPerMile"}),": Double = 1613.4453781512605",(0,t.jsx)("br",{}),"5280 * meterPerFoot"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-one-radian",children:"OneRadian"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-one-radian",children:"OneRadian"}),": Double = 57.29577951308232",(0,t.jsx)("br",{}),"180.0 / Math."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-ten",children:"Ten"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-ten",children:"Ten"}),": Array<Double>",(0,t.jsx)("br",{}),"This defines powers of ten."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-two",children:"Two"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-two",children:"Two"}),": Array<Int>",(0,t.jsx)("br",{}),"two defines powers of two, e.g., Two[0]=1, Two[1]=2, Two[2]=4, ..."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-two-pi",children:"TwoPi"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-two-pi",children:"TwoPi"}),": Double = 6.283185307179586",(0,t.jsx)("br",{}),"2 * Math."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-b-y-t-e_-m-a-x_-v-a-l-u-e",children:"UBYTE_MAX_VALUE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-b-y-t-e_-m-a-x_-v-a-l-u-e",children:"UBYTE_MAX_VALUE"}),": Short = 255",(0,t.jsx)("br",{}),"255"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-i-n-t_-m-a-x_-v-a-l-u-e",children:"UINT_MAX_VALUE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-i-n-t_-m-a-x_-v-a-l-u-e",children:"UINT_MAX_VALUE"}),": Long = 4294967295",(0,t.jsx)("br",{}),"4294967295L"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-l-o-n-g_-m-a-x_-v-a-l-u-e",children:"ULONG_MAX_VALUE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-l-o-n-g_-m-a-x_-v-a-l-u-e",children:"ULONG_MAX_VALUE"}),": ",(0,t.jsx)(e.a,{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/math/BigInteger.html",children:"BigInteger"}),(0,t.jsx)("br",{}),"18446744073709551615."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-s-h-o-r-t_-m-a-x_-v-a-l-u-e",children:"USHORT_MAX_VALUE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"val ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-u-s-h-o-r-t_-m-a-x_-v-a-l-u-e",children:"USHORT_MAX_VALUE"}),": Int = 65535",(0,t.jsx)("br",{}),"65535"]})]})]})]}),"\n",(0,t.jsx)(e.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsxs)(e.table,{children:[(0,t.jsx)(e.thead,{children:(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.th,{children:"Name"}),(0,t.jsx)(e.th,{children:"Summary"})]})}),(0,t.jsxs)(e.tbody,{children:[(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/almost0",children:"almost0"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/almost0",children:"almost0"}),"(d: Double): Boolean",(0,t.jsx)("br",{}),"This quickly tests if d is almost 0 (Math."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/almost-equal",children:"almostEqual"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/almost-equal",children:"almostEqual"}),"(nSignificantDigits: Int, d1: Double, d2: Double): Boolean",(0,t.jsx)("br",{}),"This tests if the numbers are equal to at least n significant digits.",(0,t.jsx)("br",{}),"[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/almost-equal",children:"almostEqual"}),"(nSignificantDigits: Int, f1: Float, f2: Float): Boolean",(0,t.jsx)("br",{}),"This tests if two floats are equal to at least n significant digits."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/angle02-pi",children:"angle02Pi"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/angle02-pi",children:"angle02Pi"}),"(radians: Double): Double",(0,t.jsx)("br",{}),"This converts an angle (in radians) into the range >=0 to <2PI."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/angle0360",children:"angle0360"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/angle0360",children:"angle0360"}),"(degrees: Double): Double",(0,t.jsx)("br",{}),"This converts an angle (in degrees) into the range >=0 to <360."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/angle-p-m180",children:"anglePM180"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/angle-p-m180",children:"anglePM180"}),"(degrees: Double): Double",(0,t.jsx)("br",{}),"This converts an angle (in degrees) into the range >=-180 to <180 (180 becomes -180)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger",children:"bigger"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger",children:"bigger"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This increases the value (nicely)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger15",children:"bigger15"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger15",children:"bigger15"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This increases the value (nicely) so the mantissa is 1 or 5."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger-angle",children:"biggerAngle"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger-angle",children:"biggerAngle"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This increases the double degrees value (nicely), and returns it as a string."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger-double",children:"biggerDouble"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/bigger-double",children:"biggerDouble"}),"(def: Double, mult: Double, max: Double, d: Double): Double",(0,t.jsx)("br",{}),"This increases d to the next multiple of mult."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-exponent",children:"binaryExponent"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-exponent",children:"binaryExponent"}),"(d: Double): Int",(0,t.jsx)("br",{}),"This returns the binary exponent of a double: usually +-1023."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-closest",children:"binaryFindClosest"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-closest",children:"binaryFindClosest"}),"(dar: Array<Double>, x: Double): Int",(0,t.jsx)("br",{}),"Find the closest element to x in an ascending sorted array."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-a-e",children:"binaryFindFirstGAE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-a-e",children:"binaryFindFirstGAE"}),"(dar: Array<Double>, x: Double, precision: Int): Int",(0,t.jsx)("br",{}),"Find the first element which is >x or almostEqual(precision, x) in an ascending sorted array."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e",children:"binaryFindFirstGE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-first-g-e",children:"binaryFindFirstGE"}),"(dar: Array<Double>, x: Double): Int",(0,t.jsx)("br",{}),"Find the first element which is >= x in an ascending sorted array."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-last-l-a-e",children:"binaryFindLastLAE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-last-l-a-e",children:"binaryFindLastLAE"}),"(dar: Array<Double>, x: Double, precision: Int): Int",(0,t.jsx)("br",{}),"Find the last element which is <x or almostEqual(5, x) in an ascending sorted array."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-last-l-e",children:"binaryFindLastLE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/binary-find-last-l-e",children:"binaryFindLastLE"}),"(dar: Array<Double>, x: Double): Int",(0,t.jsx)("br",{}),"Find the last element which is <= x in an ascending sorted array."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/byte-to-char",children:"byteToChar"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/byte-to-char",children:"byteToChar"}),"(b: Int): Char",(0,t.jsx)("br",{}),"Safely converts a byte (-128..127) to char (0..255)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/compass-to-math-degrees",children:"compassToMathDegrees"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/compass-to-math-degrees",children:"compassToMathDegrees"}),"(compass: Double): Double",(0,t.jsx)("br",{}),"This converts a compass heading (usually 0..360, where North is 0, East is 90...) to Math-style degrees (East is 0, North is 90, ...)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/double-to-float-na-n",children:"doubleToFloatNaN"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/double-to-float-na-n",children:"doubleToFloatNaN"}),"(d: Double): Float",(0,t.jsx)("br",{}),"Safely converts a double to a float (including the non-standard conversion of large values to Float.NaN, not Float.POSITIVE_INFINITY)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite",children:"equalsIncludingNanOrInfinite"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite",children:"equalsIncludingNanOrInfinite"}),"(a: Double, b: Double): Boolean",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/equals-including-nan-or-infinite",children:"equalsIncludingNanOrInfinite"}),"(a: Float, b: Float): Boolean",(0,t.jsx)("br",{}),"This returns true if a == b."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/exponent",children:"exponent"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/exponent",children:"exponent"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This returns the double exponent of a double (e.g., -0.0175 returns 0.01 since -0.0175=-1.75*0.01)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/finite-max",children:"finiteMax"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/finite-max",children:"finiteMax"}),"(a: Double, b: Double): Double",(0,t.jsx)("br",{}),"This returns the greater value."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/finite-min",children:"finiteMin"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/finite-min",children:"finiteMin"}),"(a: Double, b: Double): Double",(0,t.jsx)("br",{}),"This returns the lesser value."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/float-to-double",children:"floatToDouble"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/float-to-double",children:"floatToDouble"}),"(f: Double): Double",(0,t.jsx)("br",{}),"Safely converts a float to a double."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/float-to-double-na-n",children:"floatToDoubleNaN"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/float-to-double-na-n",children:"floatToDoubleNaN"}),"(f: Double): Double",(0,t.jsx)("br",{}),"Crudely (not nicely) converts a float to a double (including the non-standard conversion of INFINITY values to NaN)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/floor-div",children:"floorDiv"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/floor-div",children:"floorDiv"}),"(num: Int, den: Int): Int",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/floor-div",children:"floorDiv"}),"(num: Long, den: Long): Long",(0,t.jsx)("br",{}),"A div where the implied mod is always >=0."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/frac",children:"frac"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/frac",children:"frac"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This returns the fraction part of a double."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/gcd",children:"gcd"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/gcd",children:"gcd"}),"(n: Int, d: Int): Int",(0,t.jsx)("br",{}),"Finds the greatest common divisor."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/get-small-increment",children:"getSmallIncrement"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/get-small-increment",children:"getSmallIncrement"}),"(range: Double): Double",(0,t.jsx)("br",{}),"This returns a small increment roughly 1/100th the range (e.g., .1, 1, 10, ....)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/greater-than-a-e",children:"greaterThanAE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/greater-than-a-e",children:"greaterThanAE"}),"(nSignificantDigits: Int, d1: Double, d2: Double): Boolean",(0,t.jsx)("br",{}),"This tests if d1 is greater than or almostEqual9 d2."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/guess-frac",children:"guessFrac"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/guess-frac",children:"guessFrac"}),"(r: Double, int3: Array<Int>)",(0,t.jsx)("br",{}),"Looks for a fraction very close to some decimal value."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/guess-frac-string",children:"guessFracString"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/guess-frac-string",children:"guessFracString"}),"(d: Double): ",(0,t.jsx)(e.a,{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html",children:"String"}),(0,t.jsx)("br",{}),"This creates a String based on the results of guessFrac()"]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/hi-div",children:"hiDiv"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/hi-div",children:"hiDiv"}),"(num: Int, den: Int): Int",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/hi-div",children:"hiDiv"}),"(num: Long, den: Long): Long",(0,t.jsx)("br",{}),"A div that rounds up if den>0."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/int-exponent",children:"intExponent"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/int-exponent",children:"intExponent"}),"(d: Double): Int",(0,t.jsx)("br",{}),"This returns the integer exponent of a double (-0.0175 returns -2 since -0.0175=-1.75*10^-2)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/less-than-a-e",children:"lessThanAE"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/less-than-a-e",children:"lessThanAE"}),"(nSignificantDigits: Int, d1: Double, d2: Double): Boolean",(0,t.jsx)("br",{}),"This tests if d1 is less than or almostEqual d2."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/long-to-double-na-n",children:"longToDoubleNaN"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/long-to-double-na-n",children:"longToDoubleNaN"}),"(tl: Long): Double",(0,t.jsx)("br",{}),"This converts a long to a double (Long.MAX_VALUE becomes NaN)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/looser-angle0360",children:"looserAngle0360"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/looser-angle0360",children:"looserAngle0360"}),"(degrees: Double): Double",(0,t.jsx)("br",{}),"This converts an angle (in degrees) into the range >= 0 to <=360 (note 360 is valid)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/looser-angle-p-m180",children:"looserAnglePM180"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/looser-angle-p-m180",children:"looserAnglePM180"}),"(degrees: Double): Double",(0,t.jsx)("br",{}),"This converts an angle (in degrees) into the range >=-180 to <=180 (note 180 is valid)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/mantissa",children:"mantissa"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/mantissa",children:"mantissa"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This returns the mantissa of a double (-0.0175 returns -1.75 since -0.0175=-1.75*10^-2)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/math-to-compass-degrees",children:"mathToCompassDegrees"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/math-to-compass-degrees",children:"mathToCompassDegrees"}),"(math: Double): Double",(0,t.jsx)("br",{}),"This converts a Math-style degrees (East is 0, North is 90, ...) to a compass heading (where North is 0, East is 90, ...)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/min-max",children:"minMax"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/min-max",children:"minMax"}),"(min: Double, max: Double, current: Double): Double",(0,t.jsx)("br",{}),"This forces a double into a range defined by min..max.",(0,t.jsx)("br",{}),"[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/min-max",children:"minMax"}),"(min: Int, max: Int, current: Int): Int",(0,t.jsx)("br",{}),"This forces a int into a range defined by min..max."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/min-max-def",children:"minMaxDef"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/min-max-def",children:"minMaxDef"}),"(min: Double, max: Double, def: Double, current: Double): Double",(0,t.jsx)("br",{}),"This forces a double into a range defined by min..max.",(0,t.jsx)("br",{}),"[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/min-max-def",children:"minMaxDef"}),"(min: Int, max: Int, def: Int, current: Int): Int",(0,t.jsx)("br",{}),"This forces an int into a range defined by min..max."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-na-n-check",children:"NaNCheck"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/-na-n-check",children:"NaNCheck"}),"(d: Double): Double",(0,t.jsx)("br",{}),"Checks if the value is NaN or infinite: returns Double.NaN if so; otherwise returns the original value."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-byte",children:"narrowToByte"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-byte",children:"narrowToByte"}),"(i: Int): Byte",(0,t.jsx)("br",{}),"Safely narrows an int to a byte.",(0,t.jsx)("br",{}),"[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-byte",children:"narrowToByte"}),"(i: Long): Byte",(0,t.jsx)("br",{}),"Safely narrows a long to a byte."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-char",children:"narrowToChar"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-char",children:"narrowToChar"}),"(i: Int): Char",(0,t.jsx)("br",{}),"Safely narrows an int to a char.",(0,t.jsx)("br",{}),"[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-char",children:"narrowToChar"}),"(i: Long): Char",(0,t.jsx)("br",{}),"Safely narrows a long to a char."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-int",children:"narrowToInt"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-int",children:"narrowToInt"}),"(i: Long): Int",(0,t.jsx)("br",{}),"Safely narrows a long to an int."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-short",children:"narrowToShort"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-short",children:"narrowToShort"}),"(i: Int): Short",(0,t.jsx)("br",{}),"Safely narrows an int to a short.",(0,t.jsx)("br",{}),"[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/narrow-to-short",children:"narrowToShort"}),"(i: Long): Short",(0,t.jsx)("br",{}),"Safely narrows a long to a short."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/nice-double",children:"niceDouble"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/nice-double",children:"niceDouble"}),"(d: Double, nDigits: Int): Double",(0,t.jsx)("br",{}),"Safely tries to un-bruise a double (8."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/odd",children:"odd"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/odd",children:"odd"}),"(i: Int): Boolean",(0,t.jsx)("br",{}),"Indicates if i is odd."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/one-digit-bigger",children:"oneDigitBigger"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/one-digit-bigger",children:"oneDigitBigger"}),"(max: Double, def: Double, d: Double): Double",(0,t.jsx)("br",{}),"This increases the first digit of d (for example, .8, .9, 1, 2, 3, ..., 9, 10, 20, 30, ...)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/one-digit-smaller",children:"oneDigitSmaller"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/one-digit-smaller",children:"oneDigitSmaller"}),"(min: Double, def: Double, d: Double): Double",(0,t.jsx)("br",{}),"This decreases the first digit of d (for example, 30, 20, 10, 9, ..., 3, 2, 1, .9, .8, ...)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/random",children:"random"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/random",children:"random"}),"(max: Int): Int",(0,t.jsx)("br",{}),"This returns a random integer between 0 and max-1."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/reduce-hash-code",children:"reduceHashCode"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/reduce-hash-code",children:"reduceHashCode"}),"(hashCode: Int): ",(0,t.jsx)(e.a,{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/lang/String.html",children:"String"}),(0,t.jsx)("br",{}),"This reduces a hash code (currently to a 10 digit unsigned number -- no loss of information)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-div",children:"roundDiv"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-div",children:"roundDiv"}),"(num: Int, den: Int): Int",(0,t.jsx)("br",{}),"A div that rounds."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to",children:"roundTo"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to",children:"roundTo"}),"(d: Double, nPlaces: Int): Double",(0,t.jsx)("br",{}),"Rounds the value to the specified number of decimal places."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-byte",children:"roundToByte"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-byte",children:"roundToByte"}),"(d: Double): Byte",(0,t.jsx)("br",{}),"Safely rounds a double to a byte."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-char",children:"roundToChar"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-char",children:"roundToChar"}),"(d: Double): Char",(0,t.jsx)("br",{}),"Safely rounds a double to a char (treated as unsigned short)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-double",children:"roundToDouble"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-double",children:"roundToDouble"}),"(d: Double): Double",(0,t.jsx)("br",{}),"Safely rounds a double to the nearest integer (stored as a double)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-int",children:"roundToInt"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-int",children:"roundToInt"}),"(d: Double): Int",(0,t.jsx)("br",{}),"Safely rounds a double to an int."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-long",children:"roundToLong"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-long",children:"roundToLong"}),"(d: Double): Long",(0,t.jsx)("br",{}),"Safely rounds a double to a long."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-short",children:"roundToShort"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-short",children:"roundToShort"}),"(d: Double): Short",(0,t.jsx)("br",{}),"Safely rounds a double to a short."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-byte",children:"roundToUByte"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-byte",children:"roundToUByte"}),"(d: Double): Short",(0,t.jsx)("br",{}),"Safely rounds a double to a ubyte."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-int",children:"roundToUInt"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-int",children:"roundToUInt"}),"(d: Double): Long",(0,t.jsx)("br",{}),"Safely rounds a double to a uint."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-long",children:"roundToULong"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-long",children:"roundToULong"}),"(d: Double): ",(0,t.jsx)(e.a,{href:"https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/math/BigInteger.html",children:"BigInteger"}),(0,t.jsx)("br",{}),"Safely rounds a double to a ulong."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-short",children:"roundToUShort"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/round-to-u-short",children:"roundToUShort"}),"(d: Double): Int",(0,t.jsx)("br",{}),"Safely rounds a double to a ushort."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/set-seed",children:"setSeed"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/set-seed",children:"setSeed"}),"(seed: Long)",(0,t.jsx)("br",{}),"This sets the seed for the next call to random()."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/sign1",children:"sign1"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/sign1",children:"sign1"}),"(i: Int): Int",(0,t.jsx)("br",{}),"This returns 1 for positive i's, -1 for negative i's, and 1 if i is 0 (i.e., 0 is treated as a positive number)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller",children:"smaller"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller",children:"smaller"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This decreases the value (nicely)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller15",children:"smaller15"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller15",children:"smaller15"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This gets the double value from the string, decreases it (nicely), so the mantissa is 1 or 5."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller-angle",children:"smallerAngle"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller-angle",children:"smallerAngle"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This decreases the double degree value (nicely)."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller-double",children:"smallerDouble"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/smaller-double",children:"smallerDouble"}),"(def: Double, mult: Double, min: Double, d: Double): Double",(0,t.jsx)("br",{}),"This decreases d to the previous multiple of mult."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-divisions",children:"suggestDivisions"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-divisions",children:"suggestDivisions"}),"(range: Double): Array<Double>",(0,t.jsx)("br",{}),"This suggests the division distance along an axis so that there will be about 5-7 primary divisions and 10-25 secondary."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-low-high",children:"suggestLowHigh"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-low-high",children:"suggestLowHigh"}),"(low: Double, high: Double): Array<Double>",(0,t.jsx)("br",{}),"This returns a nice bounding range (e.g., for an axis) which includes low and high."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions",children:"suggestMaxDivisions"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions",children:"suggestMaxDivisions"}),"(range: Double, maxDivisions: Int): Double",(0,t.jsx)("br",{}),"This suggests the division distance along an axis so that there will be between maxDivisions/2 and maxDivisions."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ten",children:"ten"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ten",children:"ten"}),"(toThe: Int): Double",(0,t.jsx)("br",{}),"This returns an integer power of ten."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc",children:"trunc"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc",children:"trunc"}),"(d: Double): Double",(0,t.jsx)("br",{}),"This returns the truncated part of a double."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc-to-int",children:"truncToInt"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"open fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/trunc-to-int",children:"truncToInt"}),"(d: Double): Int",(0,t.jsx)("br",{}),"This returns the truncated part of a double, stored as an int."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ulong-to-double",children:"ulongToDouble"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ulong-to-double",children:"ulongToDouble"}),"(tl: Long): Double",(0,t.jsx)("br",{}),"This converts an unsigned long to a double."]})]}),(0,t.jsxs)(e.tr,{children:[(0,t.jsx)(e.td,{children:(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/unsigned-byte",children:"unsignedByte"})}),(0,t.jsxs)(e.td,{children:["[JVM]",(0,t.jsx)("br",{}),"fun ",(0,t.jsx)(e.a,{href:"/uk/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/unsigned-byte",children:"unsignedByte"}),"(b: Int): Int",(0,t.jsx)("br",{}),"Safely converts a signed byte (-128..127) to an unsigned byte (0..255)."]})]})]})]})]})}function l(r={}){const{wrapper:e}={...(0,d.R)(),...r.components};return e?(0,t.jsx)(e,{...r,children:(0,t.jsx)(h,{...r})}):h(r)}}}]);