"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[625],{28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var i=t(96540);const r={},n=i.createContext(r);function o(e){const s=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:s},e.children)}},91235:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions","title":"suggest-max-divisions","description":"//ERDDAP/com.cohort.util/ScriptMath2/suggestMaxDivisions","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions","permalink":"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"suggest-low-high","permalink":"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-low-high"},"next":{"title":"ten","permalink":"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/ten"}}');var r=t(74848),n=t(28453);const o={},a="suggestMaxDivisions",d={},c=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4}];function h(e){const s={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["//",(0,r.jsx)(s.a,{href:"/es/docs/dokka/",children:"ERDDAP"}),"/",(0,r.jsx)(s.a,{href:"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,r.jsx)(s.a,{href:"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/",children:"ScriptMath2"}),"/",(0,r.jsx)(s.a,{href:"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions",children:"suggestMaxDivisions"})]}),"\n",(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"suggestmaxdivisions",children:"suggestMaxDivisions"})}),"\n",(0,r.jsxs)(s.p,{children:["[JVM]",(0,r.jsx)(s.br,{}),"\n","open fun ",(0,r.jsx)(s.a,{href:"/es/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math2/suggest-max-divisions",children:"suggestMaxDivisions"}),"(range: Double, maxDivisions: Int): Double"]}),"\n",(0,r.jsx)(s.p,{children:"This suggests the division distance along an axis so that there will be between maxDivisions/2 and maxDivisions."}),"\n",(0,r.jsx)(s.h4,{id:"return",children:"Return"}),"\n",(0,r.jsx)(s.p,{children:"a double with the suggested division distance. If range isn't finite, this returns NaN. If range == 0, this returns 1. If range <0, this the result will be negative. If maxDivisions == 0, this returns range. If maxDivisions <0, this uses Math.abs(maxDivisions)."}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(s.p,{children:"JVM"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{}),(0,r.jsx)(s.th,{})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"range"}),(0,r.jsx)(s.td,{children:"the range of the axis, e.g., an axis spanning 30 - 50 would have a range of 20"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:"maxDivisions"}),(0,r.jsx)(s.td,{children:"the maximum number of divisions (segments). If you have maxNValues, use maxNValues-1 to call this method."})]})]})]})]})}function l(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);