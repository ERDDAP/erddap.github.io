"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2408],{28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>r});var s=o(96540);const n={},i=s.createContext(n);function a(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},91216:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"user/AccessToPrivateDatasets","title":"Access to Private Datasets","description":"Many ERDDAP\u2122 installations don\'t have authentication enabled and thus don\'t provide any way for users to login, nor do they have any private datasets.","source":"@site/docs/user/AccessToPrivateDatasets.md","sourceDirName":"user","slug":"/user/AccessToPrivateDatasets","permalink":"/docs/user/AccessToPrivateDatasets","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/user/AccessToPrivateDatasets.md","tags":[],"version":"current","frontMatter":{"title":"Access to Private Datasets"},"sidebar":"docSidebar","previous":{"title":"User","permalink":"/docs/category/user"},"next":{"title":"NCCSV 1.00","permalink":"/docs/user/nccsv-1.00"}}');var n=o(74848),i=o(28453);const a={title:"Access to Private Datasets"},r="Access to Private Datasets in ERDDAP\u2122",c={},l=[{value:"Updated instructions",id:"updated-instructions",level:2},{value:"Humans With Browsers",id:"humans-with-browsers",level:2},{value:"Scripts",id:"scripts",level:2}];function h(e){const t={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"access-to-private-datasets-in-erddap",children:"Access to Private Datasets in ERDDAP\u2122"})}),"\n",(0,n.jsx)(t.p,{children:"Many ERDDAP\u2122 installations don't have authentication enabled and thus don't provide any way for users to login, nor do they have any private datasets."}),"\n",(0,n.jsx)(t.p,{children:"Some ERDDAP\u2122 installations do have authentication enabled. Currently, ERDDAP\u2122 only supports authentication via Google-managed email accounts, which includes email accounts at NOAA and many universities. If an ERDDAP\u2122 has authentication enabled, anyone with a Google-managed email account can log in, but they will only have access to the private datasets that the ERDDAP\u2122 administrator has explicitly authorized them to access."}),"\n",(0,n.jsx)(t.h2,{id:"updated-instructions",children:"Updated instructions"}),"\n",(0,n.jsxs)(t.p,{children:["Some of the information below is out of date. Until this gets updated you can use ",(0,n.jsx)(t.a,{href:"https://shospital.github.io/blog/posts/blog-post/erddap_private_dataset.html",children:"this blog post"})," for recent steps on getting data from a private dataset with scripts."]}),"\n",(0,n.jsx)(t.h2,{id:"humans-with-browsers",children:"Humans With Browsers"}),"\n",(0,n.jsx)(t.p,{children:"Human users of ERDDAP\u2122 can log into ERDDAP\u2122 in a browser in order to gain access to private datasets that they are authorized to access."}),"\n",(0,n.jsx)(t.p,{children:"To log in:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Click on the log in link in the upper left of any ERDDAP\u2122 web page.",(0,n.jsx)(t.br,{}),"\n","If there is no log in link, the ERDDAP\u2122 installation doesn't have authentication enabled and there are no private datasets.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:["Click on the Sign in button to sign into your Google account.",(0,n.jsx)(t.br,{}),"\n",'The text of the button should change to "Signed in".',(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:["Click on the Log into ERDDAP button.",(0,n.jsx)(t.br,{}),"\n","The web page should change to say You are logged in as ",(0,n.jsx)(t.em,{children:"yourEmailAddress"})," .",(0,n.jsx)(t.br,{}),"\n","If it doesn't, wait 5 seconds and click on the Log into ERDDAP button again.",(0,n.jsx)(t.br,{}),"\n","In extreme cases, you may have to wait and then try again a few times.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:["Don't use your browser's Back button. Use the \"ERDDAP\" link at the top of the above, then use other links to go to ERDDAP\u2122 pages you are interested in. If a cached web page says you aren't logged in, reload the page.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"scripts",children:"Scripts"}),"\n",(0,n.jsxs)(t.p,{children:["[This is slightly modified from information provided by Lynn DeWitt, who did the hard job of figuring this out. Lynn, thank you very much!",(0,n.jsx)(t.br,{}),"\n","If you have corrections or suggestions, please email erd.data @ noaa.gov .]"]}),"\n",(0,n.jsx)(t.p,{children:"It is also possible to log in to ERDDAP\u2122 and access private datasets via a script. Here is an example which uses curl:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["These instructions assume you are using a gmail address where 2-factor authentication is not turned on. If your main gmail address has 2-factor authentication turned on, consider creating another gmail address with 2-factor authentication turned off.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:["Log in to ERDDAP\u2122 manually with the gmail address you want use in your script and accept any permissions required, then log completely back out.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:["Open the browser Developer Tools, and go to the Network tab.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:['Click on the ERDDAP\u2122 "log in" link, then the "Sign in" button and choose the appropriate email address if prompted.',(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsx)(t.li,{children:'After the "Sign in" button changes to "Signed in", the Developer Tools Network tab will show two entries that look like the following (example from Firefox):'}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    iframerpc?action=issueToken&response loginGoogle.html  \n"})}),"\n",(0,n.jsxs)(t.p,{children:['Use the mouse right-click context menu to "copy as cURL" both of these urls and paste them into a plain text editor',(0,n.jsx)(t.br,{}),"\n",'\xa0\n6.  Click on the "Log into ERDDAP" button and "copy as cURL" the link that looks like:']}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    login.html  \n"})}),"\n",(0,n.jsxs)(t.p,{children:["and paste this third curl command into the text file.",(0,n.jsx)(t.br,{}),"\n","\xa0\n7.  In the text file, you will now have 3 lines like the following, where you have logged into an ERDDAP\u2122 server at '",(0,n.jsx)(t.em,{children:(0,n.jsx)(t.a,{href:"https://host.somewhere.com/erddap",children:"https://host.somewhere.com/erddap"})}),'\'. The first curl command gets your user profile in "login_hint" and generates an "id_token". The second uses the id_token to log into Google, and the third then logs in to ERDDAP.']}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    curl 'https://accounts.google.com/o/oauth2/iframerpc?action=issueToken&response\\_type=token%20id\\_token&scope=openid%20profile%20email&client\\_id=ABCDEFG.apps.googleusercontent.com&login\\_hint=XXXXXXXXXX&ss\\_domain=https%3A%2F%2Fhost.somewhere.com&origin=https%3A%2F%2Fhost.somewhere.com' --2.0 -H 'Host: accounts.google.com' -H 'User-Agent: useragentstuff' -H 'Accept: \\*/\\*' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Referer: https://accounts.google.com/o/oauth2/iframe' -H 'Cookie: lotsofcookiestuff' -H 'Connection: keep-alive' curl 'https://host.somewhere.com/erddap/loginGoogle.html' -H 'Host: host.somewhere.com' -H 'User-Agent: useragentstuff' -H 'Accept: \\*/\\*' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Referer: https://host.somewhere.com/erddap/login.html' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Cookie: cookiestuff' -H 'Connection: keep-alive' --data 'idtoken=HUGELONGIDTOKEN' curl 'https://host.somewhere.com/erddap/login.html' -H 'Host: host.somewhere.com' -H 'User-Agent: useragentstuff' -H 'Accept: typeacceptstuff' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Referer: https://host.somewhere.com/erddap/login.html' -H 'Cookie: cookiestuff' -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1'\n"})}),"\n",(0,n.jsxs)(t.ol,{start:"8",children:["\n",(0,n.jsxs)(t.li,{children:["The above 3 lines, when run sequentially from a command line, will log you into ERDDAP. In order to use these in a script you need to capture the id_token from the first line, feed it to the second line, and write a cookie to be read by subsequent lines.",(0,n.jsx)(t.br,{}),"\n","\xa0"]}),"\n",(0,n.jsxs)(t.li,{children:["To develop a script, run the first ('",(0,n.jsx)(t.a,{href:"https://accounts.google.com",children:"https://accounts.google.com"}),') curl line exactly as it was copied from the developer tools, and capture the response (you may get a curl error about the flag "--2.0" just remove it). In php it looks like the following:']}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    $gcurlstuff=\"curl 'https://accounts.google.com/o/oauth2/iframerpc?action=issueToken&response\\_type=token%20id\\_token&scope=openid%20profile%20email&client\\_id=ABCDEFG.apps.googleusercontent.com&login\\_hint=XXXXXXXXXX&ss\\_domain=https%3A%2F%2Fhost.somewhere.com&origin=https%3A%2F%2Fhost.somewhere.com' -H 'Host: accounts.google.com' -H 'User-Agent: useragentstuff' -H 'Accept: \\*/\\*' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Referer: https://accounts.google.com/o/oauth2/iframe' -H 'Cookie: lotsofcookiestuff' -H 'Connection: keep-alive'\"; //execute the curl command: exec($gcurlstuff,$output,$status); //the response is a json array in $output $response=json\\_decode($output\\[0\\],true); //the part you need is in \"id\\_token\": $id\\_token=$response\\[\"id\\_token\"\\];\n"})}),"\n",(0,n.jsx)(t.p,{children:"Log in to Google by executing the second line using $id_token, first removing the \"-H 'Cookie: stuff'\" parameter and instead telling curl to write a cookie:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    $glcurlstuff=\"curl 'https://host.somewhere.com/erddap/loginGoogle.html' -H 'Host: host.somewhere.com' -H 'User-Agent: useragentstuff' -H 'Accept: \\*/\\*' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Referer: https://host.somewhere.com/erddap/login.html' -H 'Content-Type: application/x-www-form-urlencoded' -H 'Cookie: cookiestuff' -H 'Connection: keep-alive' --data 'idtoken=\".$id\\_token.\"' -b cookies.txt -c cookies.txt\" exec($glcurlstuff,$output1,$status);\n"})}),"\n",(0,n.jsx)(t.p,{children:"Log in to ERDDAP\u2122, again removing the \"-H 'Cookie: stuff'\" parameter, and using the previously written cookie:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    $ecurlstuff=\"curl 'https://host.somewhere.com/erddap/login.html' -H 'Host: host.somewhere.com' -H 'User-Agent: useragentstuff' -H 'Accept: typeacceptstuff' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Referer: https://host.somewhere.com/erddap/login.html' -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1 -b cookies.txt\"' exec($ecurlstuff,$output2,$status);\n"})}),"\n",(0,n.jsx)(t.p,{children:"You should now be able to request data from the server, using the same cookie:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"    $curlstuff=\"curl -s 'https://host.somewhere.com/erddap/tabledap/datasetid.csv?variablelist' -H 'Host: host.somewhere.com' -H 'User-Agent: useragentstuff' -H 'Accept: typeacceptstuff' -H 'Accept-Language: en-US,en;q=0.5' --compressed -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1' -b cookies.txt\"; exec($curlstuff,$output3,$status); //$output3 will be data in csv!\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);