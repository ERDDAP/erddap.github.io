"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8719],{37485:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>n,metadata:()=>o,toc:()=>i});const o=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/index","title":"index","description":"//ERDDAP/com.cohort.util/ScriptMath","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/index.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/","permalink":"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/documentation/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/index.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"units-since-to-epoch-seconds","permalink":"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-calendar2/units-since-to-epoch-seconds"},"next":{"title":"-e","permalink":"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-e"}}');var s=r(74848),d=r(28453);const n={},a="ScriptMath",c={},i=[{value:"Author",id:"author",level:4},{value:"Constructors",id:"constructors",level:2},{value:"Properties",id:"properties",level:2},{value:"Functions",id:"functions",level:2}];function h(e){const t={a:"a",br:"br",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["//",(0,s.jsx)(t.a,{href:"/docs/dokka/",children:"ERDDAP"}),"/",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/",children:"ScriptMath"})]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"scriptmath",children:"ScriptMath"})}),"\n",(0,s.jsxs)(t.p,{children:["[JVM]",(0,s.jsx)(t.br,{}),"\n","open class ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/",children:"ScriptMath"})]}),"\n",(0,s.jsxs)(t.p,{children:['This class makes almost all of the static methods in java.lang.Math accessible to JexlScript scripts as "Math.',(0,s.jsx)(t.em,{children:"name"}),'()" methods.']}),"\n",(0,s.jsx)(t.h4,{id:"author",children:"Author"}),"\n",(0,s.jsxs)(t.p,{children:["Bob Simons (was ",(0,s.jsx)(t.a,{href:"mailto:bob.simons@noaa.gov",children:"bob.simons@noaa.gov"}),", now ",(0,s.jsx)(t.a,{href:"mailto:BobSimons2.00@gmail.com",children:"BobSimons2.00@gmail.com"}),") 2019-11-14"]}),"\n",(0,s.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-script-math-constructor",children:"ScriptMath"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"constructor()"]})]})})]}),"\n",(0,s.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Summary"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-e",children:"E"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"val ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-e",children:"E"}),": Double = 2.718281828459045",(0,s.jsx)("br",{}),"The double value that is closer than any other to e, the base of the natural logarithms."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-p-i",children:"PI"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"val ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-p-i",children:"PI"}),": Double = 3.141592653589793",(0,s.jsx)("br",{}),"The double value that is closer than any other to pi, the ratio of the circumference of a circle to its diameter."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Name"}),(0,s.jsx)(t.th,{children:"Summary"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/abs",children:"abs"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/abs",children:"abs"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the absolute value of a double value.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/abs",children:"abs"}),"(a: Float): Float",(0,s.jsx)("br",{}),"Returns the absolute value of a float value.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/abs",children:"abs"}),"(a: Int): Int",(0,s.jsx)("br",{}),"Returns the absolute value of an int value.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/abs",children:"abs"}),"(a: Long): Long",(0,s.jsx)("br",{}),"Returns the absolute value of a long value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/acos",children:"acos"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/acos",children:"acos"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the arc cosine of a value; the returned angle is in the range 0.0 through pi."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact",children:"addExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact",children:"addExact"}),"(x: Int, y: Int): Int",(0,s.jsx)("br",{}),"Returns the sum of its arguments, throwing an exception if the result overflows an int.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/add-exact",children:"addExact"}),"(x: Long, y: Long): Long",(0,s.jsx)("br",{}),"Returns the sum of its arguments, throwing an exception if the result overflows a long."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/asin",children:"asin"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/asin",children:"asin"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the arc sine of a value; the returned angle is in the range -pi/2 through pi/2."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/atan",children:"atan"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/atan",children:"atan"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the arc tangent of a value; the returned angle is in the range -pi/2 through pi/2."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/atan2",children:"atan2"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/atan2",children:"atan2"}),"(y: Double, x: Double): Double",(0,s.jsx)("br",{}),"Returns the angle theta from the conversion of rectangular coordinates (x, y) to polar coordinates (r, theta)."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/cbrt",children:"cbrt"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/cbrt",children:"cbrt"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the cube root of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/ceil",children:"ceil"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/ceil",children:"ceil"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the smallest (closest to negative infinity) double value that is greater than or equal to the argument and is equal to a mathematical integer."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/copy-sign",children:"copySign"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/copy-sign",children:"copySign"}),"(magnitude: Double, sign: Double): Double",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/copy-sign",children:"copySign"}),"(magnitude: Float, sign: Float): Float",(0,s.jsx)("br",{}),"Returns the first floating-point argument with the sign of the second floating-point argument."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/cos",children:"cos"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/cos",children:"cos"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the trigonometric cosine of an angle."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/cosh",children:"cosh"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/cosh",children:"cosh"}),"(x: Double): Double",(0,s.jsx)("br",{}),"Returns the hyperbolic cosine of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/decrement-exact",children:"decrementExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/decrement-exact",children:"decrementExact"}),"(a: Int): Int",(0,s.jsx)("br",{}),"Returns the argument decremented by one, throwing an exception if the result overflows an int.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/decrement-exact",children:"decrementExact"}),"(a: Long): Long",(0,s.jsx)("br",{}),"Returns the argument decremented by one, throwing an exception if the result overflows a long."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/exp",children:"exp"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/exp",children:"exp"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns Euler's number e raised to the power of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/expm1",children:"expm1"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/expm1",children:"expm1"}),"(x: Double): Double",(0,s.jsx)("br",{}),"Returns ex -1."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor",children:"floor"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor",children:"floor"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the largest (closest to positive infinity) double value that is less than or equal to the argument and is equal to a mathematical integer."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor-div",children:"floorDiv"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor-div",children:"floorDiv"}),"(x: Int, y: Int): Int",(0,s.jsx)("br",{}),"Returns the largest (closest to positive infinity) int value that is less than or equal to the algebraic quotient.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor-div",children:"floorDiv"}),"(x: Long, y: Long): Long",(0,s.jsx)("br",{}),"Returns the largest (closest to positive infinity) long value that is less than or equal to the algebraic quotient."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor-mod",children:"floorMod"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor-mod",children:"floorMod"}),"(x: Int, y: Int): Int",(0,s.jsx)("br",{}),"Returns the floor modulus of the int arguments.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/floor-mod",children:"floorMod"}),"(x: Long, y: Long): Long",(0,s.jsx)("br",{}),"Returns the floor modulus of the long arguments."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/get-exponent",children:"getExponent"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/get-exponent",children:"getExponent"}),"(d: Double): Int",(0,s.jsx)("br",{}),"Returns the unbiased exponent used in the representation of a double.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/get-exponent",children:"getExponent"}),"(f: Float): Int",(0,s.jsx)("br",{}),"Returns the unbiased exponent used in the representation of a float."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/hypot",children:"hypot"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/hypot",children:"hypot"}),"(x: Double, y: Double): Double",(0,s.jsx)("br",{}),"Returns sqrt(x2 +y2) without intermediate overflow or underflow."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-i-e-e-eremainder",children:"IEEEremainder"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/-i-e-e-eremainder",children:"IEEEremainder"}),"(f1: Double, f2: Double): Double",(0,s.jsx)("br",{}),"Computes the remainder operation on two arguments as prescribed by the IEEE 754 standard."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact",children:"incrementExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact",children:"incrementExact"}),"(a: Int): Int",(0,s.jsx)("br",{}),"Returns the argument incremented by one, throwing an exception if the result overflows an int.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/increment-exact",children:"incrementExact"}),"(a: Long): Long",(0,s.jsx)("br",{}),"Returns the argument incremented by one, throwing an exception if the result overflows a long."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log",children:"log"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log",children:"log"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the natural logarithm (base e) of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log10",children:"log10"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log10",children:"log10"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the base 10 logarithm of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log1p",children:"log1p"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/log1p",children:"log1p"}),"(x: Double): Double",(0,s.jsx)("br",{}),"Returns the natural logarithm of the sum of the argument and 1."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/max",children:"max"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/max",children:"max"}),"(a: Double, b: Double): Double",(0,s.jsx)("br",{}),"Returns the greater of two double values.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/max",children:"max"}),"(a: Float, b: Float): Float",(0,s.jsx)("br",{}),"Returns the greater of two float values.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/max",children:"max"}),"(a: Int, b: Int): Int",(0,s.jsx)("br",{}),"Returns the greater of two int values.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/max",children:"max"}),"(a: Long, b: Long): Long",(0,s.jsx)("br",{}),"Returns the greater of two long values."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/min",children:"min"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/min",children:"min"}),"(a: Double, b: Double): Double",(0,s.jsx)("br",{}),"Returns the smaller of two double values.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/min",children:"min"}),"(a: Float, b: Float): Float",(0,s.jsx)("br",{}),"Returns the smaller of two float values.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/min",children:"min"}),"(a: Int, b: Int): Int",(0,s.jsx)("br",{}),"Returns the smaller of two int values.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/min",children:"min"}),"(a: Long, b: Long): Long",(0,s.jsx)("br",{}),"Returns the smaller of two long values."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/multiply-exact",children:"multiplyExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/multiply-exact",children:"multiplyExact"}),"(x: Int, y: Int): Int",(0,s.jsx)("br",{}),"Returns the product of the arguments, throwing an exception if the result overflows an int.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/multiply-exact",children:"multiplyExact"}),"(x: Long, y: Long): Long",(0,s.jsx)("br",{}),"Returns the product of the arguments, throwing an exception if the result overflows a long."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact",children:"negateExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact",children:"negateExact"}),"(a: Int): Int",(0,s.jsx)("br",{}),"Returns the negation of the argument, throwing an exception if the result overflows an int.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact",children:"negateExact"}),"(a: Long): Long",(0,s.jsx)("br",{}),"Returns the negation of the argument, throwing an exception if the result overflows a long."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-after",children:"nextAfter"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-after",children:"nextAfter"}),"(start: Double, direction: Double): Double",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-after",children:"nextAfter"}),"(start: Float, direction: Double): Float",(0,s.jsx)("br",{}),"Returns the floating-point number adjacent to the first argument in the direction of the second argument."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-down",children:"nextDown"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-down",children:"nextDown"}),"(d: Double): Double",(0,s.jsx)("br",{}),"Returns the floating-point value adjacent to d in the direction of negative infinity.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-down",children:"nextDown"}),"(f: Float): Float",(0,s.jsx)("br",{}),"Returns the floating-point value adjacent to f in the direction of negative infinity."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-up",children:"nextUp"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-up",children:"nextUp"}),"(d: Double): Double",(0,s.jsx)("br",{}),"Returns the floating-point value adjacent to d in the direction of positive infinity.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-up",children:"nextUp"}),"(f: Float): Float",(0,s.jsx)("br",{}),"Returns the floating-point value adjacent to f in the direction of positive infinity."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/pow",children:"pow"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/pow",children:"pow"}),"(a: Double, b: Double): Double",(0,s.jsx)("br",{}),"Returns the value of the first argument raised to the power of the second argument."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/random",children:"random"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/random",children:"random"}),"(): Double",(0,s.jsx)("br",{}),"Returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/rint",children:"rint"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/rint",children:"rint"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the double value that is closest in value to the argument and is equal to a mathematical integer."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/round",children:"round"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/round",children:"round"}),"(a: Double): Long",(0,s.jsx)("br",{}),"Returns the closest long to the argument, with ties rounding to positive infinity.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/round",children:"round"}),"(a: Float): Int",(0,s.jsx)("br",{}),"Returns the closest int to the argument, with ties rounding to positive infinity."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/scalb",children:"scalb"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/scalb",children:"scalb"}),"(d: Double, scaleFactor: Int): Double",(0,s.jsx)("br",{}),"Returns d \xd7 2scaleFactor rounded as if performed by a single correctly rounded floating-point multiply to a member of the double value set.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/scalb",children:"scalb"}),"(f: Float, scaleFactor: Int): Float",(0,s.jsx)("br",{}),"Returns f \xd7 2scaleFactor rounded as if performed by a single correctly rounded floating-point multiply to a member of the float value set."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/signum",children:"signum"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/signum",children:"signum"}),"(d: Double): Double",(0,s.jsx)("br",{}),"Returns the signum function of the argument; zero if the argument is zero, 1.0 if the argument is greater than zero, -1.0 if the argument is less than zero.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/signum",children:"signum"}),"(f: Float): Float",(0,s.jsx)("br",{}),"Returns the signum function of the argument; zero if the argument is zero, 1.0f if the argument is greater than zero, -1.0f if the argument is less than zero."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/sin",children:"sin"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/sin",children:"sin"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the trigonometric sine of an angle."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/sinh",children:"sinh"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/sinh",children:"sinh"}),"(x: Double): Double",(0,s.jsx)("br",{}),"Returns the hyperbolic sine of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/sqrt",children:"sqrt"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/sqrt",children:"sqrt"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the correctly rounded positive square root of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/subtract-exact",children:"subtractExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/subtract-exact",children:"subtractExact"}),"(x: Int, y: Int): Int",(0,s.jsx)("br",{}),"Returns the difference of the arguments, throwing an exception if the result overflows an int.",(0,s.jsx)("br",{}),"[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/subtract-exact",children:"subtractExact"}),"(x: Long, y: Long): Long",(0,s.jsx)("br",{}),"Returns the difference of the arguments, throwing an exception if the result overflows a long."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/tan",children:"tan"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/tan",children:"tan"}),"(a: Double): Double",(0,s.jsx)("br",{}),"Returns the trigonometric tangent of an angle."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/tanh",children:"tanh"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/tanh",children:"tanh"}),"(x: Double): Double",(0,s.jsx)("br",{}),"Returns the hyperbolic tangent of a double value."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/to-degrees",children:"toDegrees"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/to-degrees",children:"toDegrees"}),"(angrad: Double): Double",(0,s.jsx)("br",{}),"Converts an angle measured in radians to an approximately equivalent angle measured in degrees."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/to-int-exact",children:"toIntExact"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/to-int-exact",children:"toIntExact"}),"(value: Long): Int",(0,s.jsx)("br",{}),"Returns the value of the long argument; throwing an exception if the value overflows an int."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/to-radians",children:"toRadians"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/to-radians",children:"toRadians"}),"(angdeg: Double): Double",(0,s.jsx)("br",{}),"Converts an angle measured in degrees to an approximately equivalent angle measured in radians."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/ulp",children:"ulp"})}),(0,s.jsxs)(t.td,{children:["[JVM]",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/ulp",children:"ulp"}),"(d: Double): Double",(0,s.jsx)("br",{}),"open fun ",(0,s.jsx)(t.a,{href:"/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/ulp",children:"ulp"}),"(f: Float): Float",(0,s.jsx)("br",{}),"Returns the size of an ulp of the argument."]})]})]})]})]})}function l(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>a});var o=r(96540);const s={},d=o.createContext(s);function n(e){const t=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),o.createElement(d.Provider,{value:t},e.children)}}}]);