"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4506],{84273:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all","title":"replace-all","description":"//ERDDAP/com.cohort.util/ScriptString2/replaceAll","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all","permalink":"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/documentation/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"replace-all-ignore-case","permalink":"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all-ignore-case"},"next":{"title":"right","permalink":"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/right"}}');var s=t(74848),n=t(28453);const c={},l="replaceAll",i={},o=[{value:"Return",id:"return",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Throws",id:"throws",level:4}];function d(e){const r={a:"a",br:"br",h1:"h1",h4:"h4",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["//",(0,s.jsx)(r.a,{href:"/fi/docs/dokka/",children:"ERDDAP"}),"/",(0,s.jsx)(r.a,{href:"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,s.jsx)(r.a,{href:"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/",children:"ScriptString2"}),"/",(0,s.jsx)(r.a,{href:"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all",children:"replaceAll"})]}),"\n",(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"replaceall",children:"replaceAll"})}),"\n",(0,s.jsxs)(r.p,{children:["[JVM]",(0,s.jsx)(r.br,{}),"\n","open fun ",(0,s.jsx)(r.a,{href:"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all",children:"replaceAll"}),"(s: ",(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"}),", oldS: ",(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"}),", newS: ",(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"}),"): ",(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"})]}),"\n",(0,s.jsx)(r.p,{children:"Returns a string where all occurences of oldS have been replaced with newS. If oldS occurs inside newS, it won't be replaced recursively (obviously)."}),"\n",(0,s.jsx)(r.h4,{id:"return",children:"Return"}),"\n",(0,s.jsx)(r.p,{children:"a modified version of s, with newS in place of all the olds."}),"\n",(0,s.jsx)(r.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsx)(r.p,{children:"JVM"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{}),(0,s.jsx)(r.th,{})]})}),(0,s.jsxs)(r.tbody,{children:[(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"s"}),(0,s.jsx)(r.td,{children:"the main string"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"oldS"}),(0,s.jsx)(r.td,{children:"the string to be searched for"})]}),(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:"newS"}),(0,s.jsx)(r.td,{children:"the string to replace oldS"})]})]})]}),"\n",(0,s.jsx)(r.h4,{id:"throws",children:"Throws"}),"\n",(0,s.jsxs)(r.table,{children:[(0,s.jsx)(r.thead,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.th,{}),(0,s.jsx)(r.th,{})]})}),(0,s.jsx)(r.tbody,{children:(0,s.jsxs)(r.tr,{children:[(0,s.jsx)(r.td,{children:(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/RuntimeException.html",children:"RuntimeException"})}),(0,s.jsx)(r.td,{children:"if s is null."})]})})]}),"\n",(0,s.jsxs)(r.p,{children:["[JVM]",(0,s.jsx)(r.br,{}),"\n","open fun ",(0,s.jsx)(r.a,{href:"/fi/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-string2/replace-all",children:"replaceAll"}),"(s: ",(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"}),", oldCh: Char, newCh: Char): ",(0,s.jsx)(r.a,{href:"https://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/lang/String.html",children:"String"})]}),"\n",(0,s.jsx)(r.p,{children:"Returns a string where all occurences of oldCh have been replaced with newCh. This doesn't throw exceptions if bad values."})]})}function h(e={}){const{wrapper:r}={...(0,n.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,t)=>{t.d(r,{R:()=>c,x:()=>l});var a=t(96540);const s={},n=a.createContext(s);function c(e){const r=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(n.Provider,{value:r},e.children)}}}]);