"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2268],{28453:(t,e,r)=>{r.d(e,{R:()=>c,x:()=>d});var o=r(96540);const a={},n=o.createContext(a);function c(t){const e=o.useContext(n);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function d(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:c(t.components),o.createElement(n.Provider,{value:e},t.children)}},95060:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact","title":"negate-exact","description":"//ERDDAP/com.cohort.util/ScriptMath/negateExact","source":"@site/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact.md","sourceDirName":"dokka/-e-r-d-d-a-p/com.cohort.util/-script-math","slug":"/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact","permalink":"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact","draft":false,"unlisted":false,"editUrl":"https://github.com/erddap/erddap.github.io/tree/main/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docSidebar","previous":{"title":"multiply-exact","permalink":"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/multiply-exact"},"next":{"title":"next-after","permalink":"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/next-after"}}');var a=r(74848),n=r(28453);const c={},d="negateExact",i={},s=[];function h(t){const e={a:"a",br:"br",h1:"h1",header:"header",p:"p",...(0,n.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(e.p,{children:["//",(0,a.jsx)(e.a,{href:"/ur/docs/dokka/",children:"ERDDAP"}),"/",(0,a.jsx)(e.a,{href:"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/",children:"com.cohort.util"}),"/",(0,a.jsx)(e.a,{href:"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/",children:"ScriptMath"}),"/",(0,a.jsx)(e.a,{href:"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact",children:"negateExact"})]}),"\n",(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"negateexact",children:"negateExact"})}),"\n",(0,a.jsxs)(e.p,{children:["[JVM]",(0,a.jsx)(e.br,{}),"\n","open fun ",(0,a.jsx)(e.a,{href:"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact",children:"negateExact"}),"(a: Int): Int"]}),"\n",(0,a.jsx)(e.p,{children:"Returns the negation of the argument, throwing an exception if the result overflows an int."}),"\n",(0,a.jsxs)(e.p,{children:["[JVM]",(0,a.jsx)(e.br,{}),"\n","open fun ",(0,a.jsx)(e.a,{href:"/ur/docs/dokka/-e-r-d-d-a-p/com.cohort.util/-script-math/negate-exact",children:"negateExact"}),"(a: Long): Long"]}),"\n",(0,a.jsx)(e.p,{children:"Returns the negation of the argument, throwing an exception if the result overflows a long."})]})}function u(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(h,{...t})}):h(t)}}}]);